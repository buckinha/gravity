7-3-15  

In I-V, suppression costs are 300x300
In VI-X, suppression costs are 50x300

___ I ___
Mean/StdDev of pathway values generated from a TA-J3 policy
Code:
polTA =FireGirlPolicy()
polTA.setParams([1.0, 0.6491288832207847, -1.0, -0.20936705010226953, -0.9934532069942772, 0.7716349479498349, 0.21678250713131567, 0.8158792944576649, -0.9438490831539348, -0.9788779251429388, -0.4630809925204243])

values_TA = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polTA)
  values_TA.append(pw[0].net_value)

numpy.mean(values_TA)
numpy.std(values_TA)

RESULT:
    Mean: 1496301
    Std:   130993


___ II ___
Mean/StdDev of the same pathways under CT
Code:
polCT =FireGirlPolicy()
polCT.setParams([0,0,0,0,0,0,0,0,0,0,0])

values_CT = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polCT)
  values_CT.append(pw[0].net_value)

numpy.mean(values_CT)
numpy.std(values_CT)

RESULT:
Mean: 337317
Std:  503257


___ III ___ 
Mean/StdDev of the same pathways under SA
Code:
polSA =FireGirlPolicy()
polSA.setParams([1,0,0,0,0,0,0,0,0,0,0])

values_SA = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polSA)
  values_SA.append(pw[0].net_value)

numpy.mean(values_SA)
numpy.std(values_SA)

RESULT:
Mean: -378147
Std:   640069




___ IV ___
Mean/StdDev of the same pathways under LB
Code:
polLB =FireGirlPolicy()
polLB.setParams([-1,0,0,0,0,0,0,0,0,0,0])

values_LB = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polLB)
  values_LB.append(pw[0].net_value)

numpy.mean(values_LB)
numpy.std(values_LB)

RESULT:
Mean:  956181
Std:   340639



___ V ___
Get Distribution of a pathway's values over lots of policies

values_RAND = []
for i in range(100):
    b_RAND = [None] * 11
    for b in range(11):
        #b_RAND[b] = random.randrange(-1,1) #incorrect
        b_RAND[b] = random.uniform(-1,1)
    pol_RAND = FireGirlPolicy()
    pol_RAND.setParams(b_RAND)
    pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i+250, policy=pol_RAND)
    values_RAND.append(pw[0].net_value)

values_RAND
numpy.mean(values_RAND)
numpy.std(values_RAND)

RESULT with random.randrange(-1,1) which yields values of -1 or 0
Mean: 1472433
STD:   150251

RESULT with random.uniform(-1,1)
Mean:  154917
STD:  1586203
Max:  1754879
Min: -3183956

___________________________________________________________________________________________
CHANGING SUPPRESSION COST to 50,300
___________________________________________________________________________________________


___ VI ___
Mean/StdDev of pathway values generated from a TA-J3 policy
Code:
polTA =FireGirlPolicy()
polTA.setParams([1.0, 0.6491288832207847, -1.0, -0.20936705010226953, -0.9934532069942772, 0.7716349479498349, 0.21678250713131567, 0.8158792944576649, -0.9438490831539348, -0.9788779251429388, -0.4630809925204243])

values_TA = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polTA, supp_var_cost=50)
  values_TA.append(pw[0].net_value)

numpy.mean(values_TA)
numpy.std(values_TA)
numpy.min(values_TA)
numpy.max(values_TA)

RESULT:
    Mean: 1496220
    Std:   130242
    Min:  1168931
    Max:  1768987



___ VII ___
Mean/StdDev of the same pathways under CT
Code:
polCT =FireGirlPolicy()
polCT.setParams([0,0,0,0,0,0,0,0,0,0,0])

values_CT = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polCT, supp_var_cost=50)
  values_CT.append(pw[0].net_value)

numpy.mean(values_CT)
numpy.std(values_CT)

RESULT:
Mean: 1338302
Std:   170780 
Min:   933163
Max:  1744101



___ VIII ___ 
Mean/StdDev of the same pathways under SA
Code:
polSA =FireGirlPolicy()
polSA.setParams([1,0,0,0,0,0,0,0,0,0,0])

values_SA = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polSA, supp_var_cost=50)
  values_SA.append(pw[0].net_value)

numpy.mean(values_SA)
numpy.std(values_SA)
numpy.min(values_SA)
numpy.max(values_SA)

RESULT:
Mean: 1213438
Std:   170365
Min:   780739
Max:  1676540





___ IX ___
Mean/StdDev of the same pathways under LB
Code:
polLB =FireGirlPolicy()
polLB.setParams([-1,0,0,0,0,0,0,0,0,0,0])

values_LB = []
for i in range(50):
  pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i, policy=polLB, supp_var_cost=50)
  values_LB.append(pw[0].net_value)

numpy.mean(values_LB)
numpy.std(values_LB)
numpy.min(values_LB)
numpy.max(values_LB)

RESULT:
Mean:  1423421
Std:    136661
Min:   1085896
Max:   1766852





___ X ___
Get Distribution of a pathway's values over lots of policies

values_RAND = []
for i in range(100):
    b_RAND = [None] * 11
    for b in range(11):
        #b_RAND[b] = random.randrange(-1,1) #incorrect
        b_RAND[b] = random.uniform(-1,1)
    pol_RAND = FireGirlPolicy()
    pol_RAND.setParams(b_RAND)
    pw = trials.MDP_generate_standard_set(pathway_count=1, start_ID=i+250, policy=pol_RAND, supp_var_cost=50)
    values_RAND.append(pw[0].net_value)

values_RAND
numpy.mean(values_RAND)
numpy.std(values_RAND)
numpy.min(values_RAND)
numpy.max(values_RAND)



RESULT with random.uniform(-1,1)
Mean:  1238435
STD:    306051
Min: 662262
Max:  1757379 



DATA
values_TA =
[1548588.0, 1548588.0, 1482671.0, 1507005.0, 1168681.0, 1690522.0, 1499421.0, 1412407.0, 1609408.0, 1458043.0, 1647470.0, 1507492.0, 1353414.0, 1684261.0, 1768987.0, 1479816.0, 1533992.0, 1567254.0, 1291441.0, 1479156.0, 1608357.0, 1404943.0, 1417789.0, 1423623.0, 1509580.0, 1569133.0, 1536394.0, 1630955.0, 1490771.0, 1705302.0, 1356313.0, 1762443.0, 1647874.0, 1581898.0, 1586853.0, 1215795.0, 1395248.0, 1491419.0, 1455460.0, 1209365.0, 1385222.0, 1571858.0, 1467573.0, 1358437.0, 1556657.0, 1594071.0, 1463802.0, 1398670.0, 1347708.0, 1387022.0, 1542213.0]

values_CT = 
[1548588.0, 1548588.0, 1482671.0, 1507005.0, 1168681.0, 1690522.0, 1499421.0, 1412407.0, 1609408.0, 1458043.0, 1647470.0, 1507492.0, 1353414.0, 1684261.0, 1768987.0, 1479816.0, 1533992.0, 1567254.0, 1291441.0, 1479156.0, 1608357.0, 1404943.0, 1417789.0, 1423623.0, 1509580.0, 1569133.0, 1536394.0, 1630955.0, 1490771.0, 1705302.0, 1356313.0, 1762443.0, 1647874.0, 1581898.0, 1586853.0, 1215795.0, 1395248.0, 1491419.0, 1455460.0, 1209365.0, 1385222.0, 1571858.0, 1467573.0, 1358437.0, 1556657.0, 1594071.0, 1463802.0, 1398670.0, 1347708.0, 1387022.0, 1542213.0]

values_SA = 
[-923212.0, -875893.0, 390580.0, -572076.0, -213877.0, 114177.0, -1008900.0, 86984.0, -497201.0, 372703.0, -221635.0, -485347.0, 316453.0, 863290.0, 95279.0, -1008025.0, -70985.0, -674244.0, -455350.0, 299109.0, 384920.0, -861719.0, -1512311.0, 156768.0, -336584.0, -720556.0, 252109.0, -147295.0, 80118.0, -1019605.0, 53177.0, 567479.0, -371957.0, 723308.0, -1040230.0, -597586.0, -492517.0, -1388312.0, -2276261.0, -157503.0, 538281.0, -583806.0, -988472.0, -1315011.0, -934629.0, -124201.0, -1227304.0, -267805.0, -758746.0, -72950.0]

values_LB = 
[859474.0, 1335323.0, 783197.0, 866146.0, 747136.0, 719940.0, 423346.0, 829001.0, 200302.0, 1543909.0, 1306993.0, 48703.0, 1041073.0, 1389602.0, 882684.0, 1287281.0, 1262633.0, 1082403.0, 440177.0, 1143826.0, 1077757.0, 500321.0, 1148914.0, 1145503.0, 1052903.0, 1269446.0, 992071.0, 971522.0, 1241558.0, 390041.0, 1325411.0, 1051607.0, 1012211.0, 1422718.0, 790718.0, 637105.0, 1164174.0, 232505.0, 1170841.0, 1242743.0, 1100602.0, 517011.0, 830293.0, 884660.0, 1361793.0, 1059418.0, 781342.0, 917480.0, 934907.0, 1388314.0]


Accidentally using randrange(-1,1) which made all values either -1 or 0, approximating let-burn scenarios
values_RAND =   
[1501575.0, 1560918.0, 1676090.0, 1612898.0, 1735764.0, 1495486.0, 1507077.0, 1336515.0, 1510485.0, 1708314.0, 1510579.0, 1361990.0, 1419445.0, 1537969.0, 1191469.0, 1576999.0, 1482780.0, 1589208.0, 1578239.0, 1613216.0, 1655835.0, 1282915.0, 1599825.0, 1510153.0, 1592877.0, 1492764.0, 1379716.0, 1586501.0, 1525499.0, 1611367.0, 1555756.0, 1507786.0, 1428615.0, 1449483.0, 1507817.0, 1468854.0, 1589868.0, 1492670.0, 1465905.0, 1441957.0, 1600267.0, 1585739.0, 1564471.0, 1388264.0, 1518616.0, 1442958.0, 1498142.0, 1526519.0, 1455296.0, 1613567.0, 1719917.0, 1439823.0, 1474637.0, 1452689.0, 1311965.0, 1362641.0, 1121851.0, 1624246.0, 1712469.0, 1193829.0, 1270469.0, 1376221.0, 1540662.0, 1567999.0, 1621919.0, 1574891.0, 1304108.0, 1416787.0, 1205060.0, 1533519.0, 1632191.0, 1560873.0, 1480211.0, 1503135.0, 1478335.0, 1615826.0, 1380933.0, 1291213.0, 1399095.0, 1093691.0, 1491096.0, 1596947.0, 1225508.0, 1285909.0, 1387729.0, 1493721.0, 1763903.0, 1373577.0, 1144244.0, 1465149.0, 1229062.0, 1520383.0, 1460638.0, 1280352.0, 1567283.0, 1537679.0, 1427803.0, 1415787.0, 874382.0, 1593889.0]

using random.uniform(-1,1)
values_RAND = 
[1534661.0, 1550848.0, -461642.0, -1635016.0, 1730457.0, -1927477.0, 1507077.0, 1336515.0, 1510485.0, -888991.0, -1915822.0, -1835867.0, -1443573.0, -2134844.0, 1191469.0, 1576999.0, -1574047.0, 1583537.0, 1577664.0, -1119338.0, 1655835.0, -2283238.0, 1599825.0, 1506192.0, 1592877.0, -1528874.0, 1379716.0, 1580158.0, -1343090.0, 1611367.0, 1550667.0, 1507786.0, 1427780.0, 1449483.0, 1506346.0, -1840227.0, 1584388.0, -1548501.0, -1487525.0, 1441071.0, 1600267.0, 1585739.0, -1709086.0, -2068645.0, -1471000.0, 1442958.0, 1484086.0, -385851.0, 1455296.0, 1612481.0, 1718345.0, -1486849.0, -1059435.0, -1249764.0, 1305055.0, 1348642.0, 1121851.0, -1245755.0, 1704501.0, 1191294.0, 1269672.0, 1376221.0, -2060742.0, -1650841.0, 1621081.0, -680573.0, -2101907.0, 1416787.0, 1202855.0, -1495413.0, 1629849.0, -1280664.0, 1480211.0, -2198561.0, 1476433.0, -2230751.0, -2519948.0, -1814303.0, -2090719.0, 1093691.0, 1491096.0, 1596947.0, -1995099.0, 1282933.0, -3183956.0, -1182193.0, 1754879.0, -1666423.0, 1144244.0, 1465149.0, -2443479.0, 1519668.0, 1460638.0, 1273910.0, 1567283.0, 1530909.0, 1424897.0, -2058195.0, 872340.0, -1225501.0]





SUPP_VAR_COST=50

values_TA = 
[1548588.0, 1482921.0, 1507005.0, 1168931.0, 1690522.0, 1499421.0, 1412407.0, 1609408.0, 1458043.0, 1647470.0, 1507492.0, 1353414.0, 1684261.0, 1768987.0, 1480066.0, 1533992.0, 1567254.0, 1291441.0, 1479156.0, 1608357.0, 1404943.0, 1417789.0, 1423873.0, 1509580.0, 1569133.0, 1536394.0, 1631205.0, 1490771.0, 1705302.0, 1356313.0, 1762693.0, 1647874.0, 1581898.0, 1586853.0, 1215795.0, 1395248.0, 1491669.0, 1455460.0, 1255115.0, 1385222.0, 1571858.0, 1467573.0, 1358687.0, 1556657.0, 1594071.0, 1464052.0, 1398670.0, 1347708.0, 1387022.0, 1542463.0]

values_CT = 
[1227343.0, 1275510.0, 1380427.0, 933163.0, 1319072.0, 1391804.0, 1188092.0, 1549048.0, 1247832.0, 1527936.0, 1486410.0, 1226559.0, 1572832.0, 1744101.0, 1360074.0, 1386679.0, 1407348.0, 1179572.0, 1352743.0, 1542082.0, 1374622.0, 1160344.0, 1045890.0, 1338856.0, 1333344.0, 1355947.0, 1468771.0, 1347799.0, 1582605.0, 1414789.0, 1567687.0, 1506953.0, 1506314.0, 1437344.0, 993287.0, 1161823.0, 1286210.0, 1145260.0, 994494.0, 1428069.0, 1531201.0, 1285530.0, 1197162.0, 1459470.0, 1409457.0, 1330702.0, 1205309.0, 1210862.0, 1077555.0, 1458810.0]

values_SA = 
[1109788.0, 1018607.0, 1382580.0, 909174.0, 1202373.0, 1310677.0, 1032850.0, 1407484.0, 1213549.0, 1365453.0, 1261365.0, 1212903.0, 1379953.0, 1676540.0, 1212279.0, 1070975.0, 1312765.0, 1107006.0, 1284400.0, 1374609.0, 1373420.0, 1095031.0, 922689.0, 1224768.0, 1214166.0, 1184694.0, 1402859.0, 1182455.0, 1437368.0, 1131895.0, 1341177.0, 1445729.0, 1314793.0, 1400308.0, 908770.0, 1055914.0, 1068233.0, 1025938.0, 780739.0, 1376497.0, 1471781.0, 1237444.0, 1073028.0, 1180989.0, 1198121.0, 1254549.0, 1043946.0, 1097195.0, 1135254.0, 1246800.0]

value_LB = 
[1311974.0, 1441823.0, 1389447.0, 1085896.0, 1430636.0, 1410190.0, 1216846.0, 1567001.0, 1316302.0, 1631659.0, 1494243.0, 1295453.0, 1611073.0, 1766852.0, 1375684.0, 1463781.0, 1526133.0, 1253153.0, 1412177.0, 1574576.0, 1423257.0, 1301321.0, 1440414.0, 1470753.0, 1557153.0, 1495196.0, 1500321.0, 1394022.0, 1622308.0, 1429291.0, 1659411.0, 1532357.0, 1543211.0, 1530218.0, 1185968.0, 1269855.0, 1404174.0, 1315255.0, 1259841.0, 1387493.0, 1534602.0, 1325011.0, 1267543.0, 1433660.0, 1549043.0, 1430418.0, 1267842.0, 1270480.0, 1265157.0, 1530564.0]


values_RAND = 
[838710.0, 1553848.0, 1209858.0, 894484.0, 1731207.0, 812523.0, 1507077.0, 1336515.0, 1510485.0, 1004009.0, 808928.0, 680133.0, 991177.0, 832406.0, 1191969.0, 1576999.0, 792453.0, 1584537.0, 1577914.0, 1008162.0, 1655835.0, 662262.0, 1599825.0, 1506942.0, 1592877.0, 956876.0, 1379716.0, 1581158.0, 966910.0, 1611367.0, 1552917.0, 1507786.0, 1428030.0, 1449483.0, 1507096.0, 914773.0, 1585388.0, 956249.0, 1027475.0, 1441571.0, 1600267.0, 1585739.0, 962914.0, 811105.0, 1012500.0, 1442958.0, 1486586.0, 963899.0, 1455296.0, 1613481.0, 1718845.0, 1113651.0, 931815.0, 1057736.0, 1306805.0, 1352892.0, 1121851.0, 863995.0, 1705751.0, 1191794.0, 1269922.0, 1376221.0, 1006508.0, 1027409.0, 1621831.0, 1260177.0, 944343.0, 1416787.0, 1203605.0, 931587.0, 1630349.0, 994836.0, 1480211.0, 772439.0, 1476683.0, 985499.0, 845552.0, 948947.0, 873531.0, 1093691.0, 1491096.0, 1596947.0, 890901.0, 1283433.0, 674794.0, 1072807.0, 1757379.0, 786327.0, 1144244.0, 1465149.0, 863021.0, 1519918.0, 1460888.0, 1275660.0, 1567283.0, 1532409.0, 1461397.0, 941805.0, 1302590.0, 967499.0]
